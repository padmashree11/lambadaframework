<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>lambada</artifactId>
    <groupId>org.lambadaframework</groupId>
    <version>0.8.8</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.lambadaframework</groupId>
  <artifactId>boilerplate</artifactId>
  <build>
    <extensions>
      <extension>
        <groupId>org.kuali.maven.wagons</groupId>
        <artifactId>maven-s3-wagon</artifactId>
        <version>1.2.1</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <groupId>org.lambadaframework</groupId>
        <artifactId>lambada-maven-plugin</artifactId>
        <version>${lambada.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare</goal>
              <goal>deploy</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.lambadaframework</groupId>
            <artifactId>boilerplate</artifactId>
            <version>${project.parent.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <packageName>${deployment.package}</packageName>
          <regionToDeploy>${deployment.region}</regionToDeploy>
          <stageToDeploy>${deployment.stage}</stageToDeploy>
          <lambdaMaximumExecutionTime>${deployment.maximumExecutionTime}</lambdaMaximumExecutionTime>
          <lambdaMemorySize>${deployment.lambdaMemorySize}</lambdaMemorySize>
          <bucket>${deployment.bucket}</bucket>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <minimizeJar>false</minimizeJar>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.2</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.4</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>objenesis</artifactId>
          <groupId>org.objenesis</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-easymock</artifactId>
      <version>1.6.5</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>cglib-nodep</artifactId>
          <groupId>cglib</groupId>
        </exclusion>
        <exclusion>
          <artifactId>powermock-api-support</artifactId>
          <groupId>org.powermock</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>1.6.5</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>powermock-module-junit4-common</artifactId>
          <groupId>org.powermock</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.10.19</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
        <exclusion>
          <artifactId>objenesis</artifactId>
          <groupId>org.objenesis</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <distributionManagement>
    <repository>
      <id>aws-releases</id>
      <name>AWS Release Repository</name>
      <url>s3://${deployment.bucket}/releases</url>
    </repository>
    <snapshotRepository>
      <id>aws-snapshots</id>
      <name>AWS Snapshot Repository</name>
      <url>s3://${deployment.bucket}/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
  <properties>
    <deployment.stage>production</deployment.stage>
    <lambada.version>${project.parent.version}</lambada.version>
    <deployment.package>org.lambadaframework.example</deployment.package>
    <deployment.region>us-west-1</deployment.region>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <deployment.lambdaMemorySize>1024</deployment.lambdaMemorySize>
    <deployment.maximumExecutionTime>10</deployment.maximumExecutionTime>
    <deployment.bucket>lambada.test</deployment.bucket>
  </properties>
</project>

